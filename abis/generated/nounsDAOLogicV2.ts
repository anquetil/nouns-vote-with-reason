// Generated by @wagmi/cli@1.0.3 on 6/1/2023 at 11:21:22 AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi';
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NounsDAOLogicV2
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export const nounsDaoLogicV2ABI = [
  { type: 'error', inputs: [], name: 'AdminOnly' },
  { type: 'error', inputs: [], name: 'CantCancelExecutedProposal' },
  { type: 'error', inputs: [], name: 'CantVetoExecutedProposal' },
  { type: 'error', inputs: [], name: 'InvalidMaxQuorumVotesBPS' },
  { type: 'error', inputs: [], name: 'InvalidMinQuorumVotesBPS' },
  { type: 'error', inputs: [], name: 'MinQuorumBPSGreaterThanMaxQuorumBPS' },
  { type: 'error', inputs: [], name: 'PendingVetoerOnly' },
  { type: 'error', inputs: [], name: 'UnsafeUint16Cast' },
  { type: 'error', inputs: [], name: 'VetoerBurned' },
  { type: 'error', inputs: [], name: 'VetoerOnly' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldMaxQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
      {
        name: 'newMaxQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
    ],
    name: 'MaxQuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldMinQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
      {
        name: 'newMinQuorumVotesBPS',
        internalType: 'uint16',
        type: 'uint16',
        indexed: false,
      },
    ],
    name: 'MinQuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldImplementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newImplementation',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewImplementation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldPendingAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newPendingAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewPendingAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldPendingVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newPendingVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewPendingVetoer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newVetoer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'NewVetoer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'proposer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'targets',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
      {
        name: 'values',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'signatures',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false,
      },
      {
        name: 'calldatas',
        internalType: 'bytes[]',
        type: 'bytes[]',
        indexed: false,
      },
      {
        name: 'startBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'endBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'description',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ProposalCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'proposer',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'targets',
        internalType: 'address[]',
        type: 'address[]',
        indexed: false,
      },
      {
        name: 'values',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false,
      },
      {
        name: 'signatures',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false,
      },
      {
        name: 'calldatas',
        internalType: 'bytes[]',
        type: 'bytes[]',
        indexed: false,
      },
      {
        name: 'startBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'endBlock',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'proposalThreshold',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'quorumVotes',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'description',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'ProposalCreatedWithRequirements',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'eta', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalQueued',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldProposalThresholdBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newProposalThresholdBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ProposalThresholdBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalVetoed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldQuorumCoefficient',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
      {
        name: 'newQuorumCoefficient',
        internalType: 'uint32',
        type: 'uint32',
        indexed: false,
      },
    ],
    name: 'QuorumCoefficientSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldQuorumVotesBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newQuorumVotesBPS',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'QuorumVotesBPSSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'voter',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'refundAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'refundSent',
        internalType: 'bool',
        type: 'bool',
        indexed: false,
      },
    ],
    name: 'RefundableVote',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'voter',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'proposalId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'support', internalType: 'uint8', type: 'uint8', indexed: false },
      {
        name: 'votes',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'reason',
        internalType: 'string',
        type: 'string',
        indexed: false,
      },
    ],
    name: 'VoteCast',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldVotingDelay',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newVotingDelay',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'VotingDelaySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'oldVotingPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newVotingPeriod',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'VotingPeriodSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      { name: 'sent', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Withdraw',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BALLOT_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_PROPOSAL_THRESHOLD_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_QUORUM_VOTES_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_BASE_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_GAS_USED',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_REFUND_PRIORITY_FEE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_VOTING_DELAY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_VOTING_PERIOD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_PROPOSAL_THRESHOLD_BPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_VOTING_DELAY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_VOTING_PERIOD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'REFUND_BASE_GAS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_acceptAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_acceptVetoer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_burnVetoPower',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
      { name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
      { name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32' },
    ],
    name: '_setDynamicQuorumParams',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMaxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
    ],
    name: '_setMaxQuorumVotesBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMinQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
    ],
    name: '_setMinQuorumVotesBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newPendingAdmin', internalType: 'address', type: 'address' },
    ],
    name: '_setPendingAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newPendingVetoer', internalType: 'address', type: 'address' },
    ],
    name: '_setPendingVetoer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'newProposalThresholdBPS',
        internalType: 'uint256',
        type: 'uint256',
      },
    ],
    name: '_setProposalThresholdBPS',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newQuorumCoefficient', internalType: 'uint32', type: 'uint32' },
    ],
    name: '_setQuorumCoefficient',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newVotingDelay', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_setVotingDelay',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newVotingPeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: '_setVotingPeriod',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: '_withdraw',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'admin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'cancel',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'castRefundableVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'castRefundableVoteWithReason',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'castVote',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'castVoteBySig',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'support', internalType: 'uint8', type: 'uint8' },
      { name: 'reason', internalType: 'string', type: 'string' },
    ],
    name: 'castVoteWithReason',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'againstVotes', internalType: 'uint256', type: 'uint256' },
      { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
      {
        name: 'params',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'dynamicQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'execute',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getActions',
    outputs: [
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signatures', internalType: 'string[]', type: 'string[]' },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'blockNumber_', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getDynamicQuorumParamsAt',
    outputs: [
      {
        name: '',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'voter', internalType: 'address', type: 'address' },
    ],
    name: 'getReceipt',
    outputs: [
      {
        name: '',
        internalType: 'struct NounsDAOStorageV1Adjusted.Receipt',
        type: 'tuple',
        components: [
          { name: 'hasVoted', internalType: 'bool', type: 'bool' },
          { name: 'support', internalType: 'uint8', type: 'uint8' },
          { name: 'votes', internalType: 'uint96', type: 'uint96' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'implementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'timelock_', internalType: 'address', type: 'address' },
      { name: 'nouns_', internalType: 'address', type: 'address' },
      { name: 'vetoer_', internalType: 'address', type: 'address' },
      { name: 'votingPeriod_', internalType: 'uint256', type: 'uint256' },
      { name: 'votingDelay_', internalType: 'uint256', type: 'uint256' },
      {
        name: 'proposalThresholdBPS_',
        internalType: 'uint256',
        type: 'uint256',
      },
      {
        name: 'dynamicQuorumParams_',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'latestProposalIds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nouns',
    outputs: [
      { name: '', internalType: 'contract NounsTokenLike', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingAdmin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pendingVetoer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalMaxOperations',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalThreshold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalThresholdBPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'proposals',
    outputs: [
      {
        name: '',
        internalType: 'struct NounsDAOStorageV2.ProposalCondensed',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'proposer', internalType: 'address', type: 'address' },
          {
            name: 'proposalThreshold',
            internalType: 'uint256',
            type: 'uint256',
          },
          { name: 'quorumVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'eta', internalType: 'uint256', type: 'uint256' },
          { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'forVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'againstVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'abstainVotes', internalType: 'uint256', type: 'uint256' },
          { name: 'canceled', internalType: 'bool', type: 'bool' },
          { name: 'vetoed', internalType: 'bool', type: 'bool' },
          { name: 'executed', internalType: 'bool', type: 'bool' },
          { name: 'totalSupply', internalType: 'uint256', type: 'uint256' },
          { name: 'creationBlock', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'targets', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signatures', internalType: 'string[]', type: 'string[]' },
      { name: 'calldatas', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'description', internalType: 'string', type: 'string' },
    ],
    name: 'propose',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'queue',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'quorumParamsCheckpoints',
    outputs: [
      { name: 'fromBlock', internalType: 'uint32', type: 'uint32' },
      {
        name: 'params',
        internalType: 'struct NounsDAOStorageV2.DynamicQuorumParams',
        type: 'tuple',
        components: [
          { name: 'minQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'maxQuorumVotesBPS', internalType: 'uint16', type: 'uint16' },
          { name: 'quorumCoefficient', internalType: 'uint32', type: 'uint32' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'quorumVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'quorumVotesBPS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'state',
    outputs: [
      {
        name: '',
        internalType: 'enum NounsDAOStorageV1Adjusted.ProposalState',
        type: 'uint8',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timelock',
    outputs: [
      { name: '', internalType: 'contract INounsDAOExecutor', type: 'address' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'veto',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'vetoer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votingDelay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'votingPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const;

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export const nounsDaoLogicV2Address = {
  1: '0x6f3e6272a167e8accb32072d08e0957f9c79223d',
} as const;

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export const nounsDaoLogicV2Config = {
  address: nounsDaoLogicV2Address,
  abi: nounsDaoLogicV2ABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"BALLOT_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2BallotTypehash<
  TFunctionName extends 'BALLOT_TYPEHASH',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'BALLOT_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"DOMAIN_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2DomainTypehash<
  TFunctionName extends 'DOMAIN_TYPEHASH',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'DOMAIN_TYPEHASH',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_PROPOSAL_THRESHOLD_BPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxProposalThresholdBps<
  TFunctionName extends 'MAX_PROPOSAL_THRESHOLD_BPS',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_PROPOSAL_THRESHOLD_BPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_QUORUM_VOTES_BPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxQuorumVotesBps<
  TFunctionName extends 'MAX_QUORUM_VOTES_BPS',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_QUORUM_VOTES_BPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_QUORUM_VOTES_BPS_UPPER_BOUND"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxQuorumVotesBpsUpperBound<
  TFunctionName extends 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_QUORUM_VOTES_BPS_UPPER_BOUND',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_REFUND_BASE_FEE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxRefundBaseFee<
  TFunctionName extends 'MAX_REFUND_BASE_FEE',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_REFUND_BASE_FEE',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_REFUND_GAS_USED"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxRefundGasUsed<
  TFunctionName extends 'MAX_REFUND_GAS_USED',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_REFUND_GAS_USED',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_REFUND_PRIORITY_FEE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxRefundPriorityFee<
  TFunctionName extends 'MAX_REFUND_PRIORITY_FEE',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_REFUND_PRIORITY_FEE',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_VOTING_DELAY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxVotingDelay<
  TFunctionName extends 'MAX_VOTING_DELAY',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_VOTING_DELAY',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MAX_VOTING_PERIOD"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxVotingPeriod<
  TFunctionName extends 'MAX_VOTING_PERIOD',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MAX_VOTING_PERIOD',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MIN_PROPOSAL_THRESHOLD_BPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinProposalThresholdBps<
  TFunctionName extends 'MIN_PROPOSAL_THRESHOLD_BPS',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MIN_PROPOSAL_THRESHOLD_BPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MIN_QUORUM_VOTES_BPS_LOWER_BOUND"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinQuorumVotesBpsLowerBound<
  TFunctionName extends 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MIN_QUORUM_VOTES_BPS_LOWER_BOUND',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MIN_QUORUM_VOTES_BPS_UPPER_BOUND"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinQuorumVotesBpsUpperBound<
  TFunctionName extends 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MIN_QUORUM_VOTES_BPS_UPPER_BOUND',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MIN_VOTING_DELAY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinVotingDelay<
  TFunctionName extends 'MIN_VOTING_DELAY',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MIN_VOTING_DELAY',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"MIN_VOTING_PERIOD"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinVotingPeriod<
  TFunctionName extends 'MIN_VOTING_PERIOD',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'MIN_VOTING_PERIOD',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"REFUND_BASE_GAS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2RefundBaseGas<
  TFunctionName extends 'REFUND_BASE_GAS',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'REFUND_BASE_GAS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"admin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Admin<
  TFunctionName extends 'admin',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'admin',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"dynamicQuorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2DynamicQuorumVotes<
  TFunctionName extends 'dynamicQuorumVotes',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'dynamicQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"getActions"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2GetActions<
  TFunctionName extends 'getActions',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'getActions',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"getDynamicQuorumParamsAt"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2GetDynamicQuorumParamsAt<
  TFunctionName extends 'getDynamicQuorumParamsAt',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'getDynamicQuorumParamsAt',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"getReceipt"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2GetReceipt<
  TFunctionName extends 'getReceipt',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'getReceipt',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"implementation"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Implementation<
  TFunctionName extends 'implementation',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'implementation',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"latestProposalIds"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2LatestProposalIds<
  TFunctionName extends 'latestProposalIds',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'latestProposalIds',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"maxQuorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxQuorumVotes<
  TFunctionName extends 'maxQuorumVotes',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'maxQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"minQuorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinQuorumVotes<
  TFunctionName extends 'minQuorumVotes',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'minQuorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Name<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"nouns"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Nouns<
  TFunctionName extends 'nouns',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'nouns',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"pendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2PendingAdmin<
  TFunctionName extends 'pendingAdmin',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'pendingAdmin',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"pendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2PendingVetoer<
  TFunctionName extends 'pendingVetoer',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'pendingVetoer',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"proposalCount"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalCount<
  TFunctionName extends 'proposalCount',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'proposalCount',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"proposalMaxOperations"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalMaxOperations<
  TFunctionName extends 'proposalMaxOperations',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'proposalMaxOperations',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"proposalThreshold"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalThreshold<
  TFunctionName extends 'proposalThreshold',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'proposalThreshold',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"proposalThresholdBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalThresholdBps<
  TFunctionName extends 'proposalThresholdBPS',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'proposalThresholdBPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"proposals"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Proposals<
  TFunctionName extends 'proposals',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'proposals',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"quorumParamsCheckpoints"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2QuorumParamsCheckpoints<
  TFunctionName extends 'quorumParamsCheckpoints',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'quorumParamsCheckpoints',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"quorumVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2QuorumVotes<
  TFunctionName extends 'quorumVotes',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'quorumVotes',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"quorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2QuorumVotesBps<
  TFunctionName extends 'quorumVotesBPS',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'quorumVotesBPS',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"state"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2State<
  TFunctionName extends 'state',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'state',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"timelock"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Timelock<
  TFunctionName extends 'timelock',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'timelock',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"vetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Vetoer<
  TFunctionName extends 'vetoer',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'vetoer',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"votingDelay"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2VotingDelay<
  TFunctionName extends 'votingDelay',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'votingDelay',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"votingPeriod"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2VotingPeriod<
  TFunctionName extends 'votingPeriod',
  TSelectData = ReadContractResult<typeof nounsDaoLogicV2ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<
      typeof nounsDaoLogicV2ABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractRead({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'votingPeriod',
    ...config,
  } as UseContractReadConfig<typeof nounsDaoLogicV2ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Write<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        TFunctionName,
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, TFunctionName, TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_acceptAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2AcceptAdmin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_acceptAdmin'
        >['request']['abi'],
        '_acceptAdmin',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_acceptAdmin';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_acceptAdmin',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_acceptAdmin';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_acceptAdmin', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_acceptAdmin',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_acceptVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2AcceptVetoer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_acceptVetoer'
        >['request']['abi'],
        '_acceptVetoer',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_acceptVetoer';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_acceptVetoer',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_acceptVetoer';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_acceptVetoer', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_acceptVetoer',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_burnVetoPower"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2BurnVetoPower<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_burnVetoPower'
        >['request']['abi'],
        '_burnVetoPower',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_burnVetoPower';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_burnVetoPower',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_burnVetoPower';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_burnVetoPower', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_burnVetoPower',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setDynamicQuorumParams"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetDynamicQuorumParams<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setDynamicQuorumParams'
        >['request']['abi'],
        '_setDynamicQuorumParams',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setDynamicQuorumParams';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setDynamicQuorumParams',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setDynamicQuorumParams';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    '_setDynamicQuorumParams',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setDynamicQuorumParams',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setMaxQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetMaxQuorumVotesBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setMaxQuorumVotesBPS'
        >['request']['abi'],
        '_setMaxQuorumVotesBPS',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setMaxQuorumVotesBPS';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setMaxQuorumVotesBPS',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setMaxQuorumVotesBPS';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    '_setMaxQuorumVotesBPS',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setMaxQuorumVotesBPS',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setMinQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetMinQuorumVotesBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setMinQuorumVotesBPS'
        >['request']['abi'],
        '_setMinQuorumVotesBPS',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setMinQuorumVotesBPS';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setMinQuorumVotesBPS',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setMinQuorumVotesBPS';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    '_setMinQuorumVotesBPS',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setMinQuorumVotesBPS',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setPendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetPendingAdmin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setPendingAdmin'
        >['request']['abi'],
        '_setPendingAdmin',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setPendingAdmin';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setPendingAdmin',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setPendingAdmin';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_setPendingAdmin', TMode>(
    {
      abi: nounsDaoLogicV2ABI,
      address: nounsDaoLogicV2Address[1],
      functionName: '_setPendingAdmin',
      ...config,
    } as any
  );
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setPendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetPendingVetoer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setPendingVetoer'
        >['request']['abi'],
        '_setPendingVetoer',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setPendingVetoer';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setPendingVetoer',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setPendingVetoer';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    '_setPendingVetoer',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setPendingVetoer',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setProposalThresholdBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetProposalThresholdBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setProposalThresholdBPS'
        >['request']['abi'],
        '_setProposalThresholdBPS',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setProposalThresholdBPS';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setProposalThresholdBPS',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setProposalThresholdBPS';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    '_setProposalThresholdBPS',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setProposalThresholdBPS',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setQuorumCoefficient"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetQuorumCoefficient<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setQuorumCoefficient'
        >['request']['abi'],
        '_setQuorumCoefficient',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setQuorumCoefficient';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setQuorumCoefficient',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setQuorumCoefficient';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    '_setQuorumCoefficient',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setQuorumCoefficient',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setVotingDelay"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetVotingDelay<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setVotingDelay'
        >['request']['abi'],
        '_setVotingDelay',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setVotingDelay';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setVotingDelay',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setVotingDelay';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_setVotingDelay', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setVotingDelay',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setVotingPeriod"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2SetVotingPeriod<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_setVotingPeriod'
        >['request']['abi'],
        '_setVotingPeriod',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: '_setVotingPeriod';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        '_setVotingPeriod',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_setVotingPeriod';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_setVotingPeriod', TMode>(
    {
      abi: nounsDaoLogicV2ABI,
      address: nounsDaoLogicV2Address[1],
      functionName: '_setVotingPeriod',
      ...config,
    } as any
  );
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Withdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          '_withdraw'
        >['request']['abi'],
        '_withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: '_withdraw' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, '_withdraw', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: '_withdraw';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, '_withdraw', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_withdraw',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"cancel"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Cancel<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'cancel'
        >['request']['abi'],
        'cancel',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'cancel' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'cancel', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'cancel';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'cancel', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'cancel',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castRefundableVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2CastRefundableVote<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'castRefundableVote'
        >['request']['abi'],
        'castRefundableVote',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'castRefundableVote';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        'castRefundableVote',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'castRefundableVote';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    'castRefundableVote',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castRefundableVote',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castRefundableVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2CastRefundableVoteWithReason<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'castRefundableVoteWithReason'
        >['request']['abi'],
        'castRefundableVoteWithReason',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'castRefundableVoteWithReason';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        'castRefundableVoteWithReason',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'castRefundableVoteWithReason';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    'castRefundableVoteWithReason',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castRefundableVoteWithReason',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2CastVote<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'castVote'
        >['request']['abi'],
        'castVote',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'castVote' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castVote', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'castVote';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'castVote', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castVote',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castVoteBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2CastVoteBySig<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'castVoteBySig'
        >['request']['abi'],
        'castVoteBySig',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'castVoteBySig';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        'castVoteBySig',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'castVoteBySig';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'castVoteBySig', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castVoteBySig',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2CastVoteWithReason<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'castVoteWithReason'
        >['request']['abi'],
        'castVoteWithReason',
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'castVoteWithReason';
      }
    : UseContractWriteConfig<
        typeof nounsDaoLogicV2ABI,
        'castVoteWithReason',
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'castVoteWithReason';
      } = {} as any
) {
  return useContractWrite<
    typeof nounsDaoLogicV2ABI,
    'castVoteWithReason',
    TMode
  >({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castVoteWithReason',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"execute"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Execute<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'execute'
        >['request']['abi'],
        'execute',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'execute' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'execute', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'execute';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'execute', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'execute',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Initialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'initialize'
        >['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'initialize', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'initialize';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'initialize', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'initialize',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"propose"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Propose<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'propose'
        >['request']['abi'],
        'propose',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'propose' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'propose', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'propose';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'propose', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'propose',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"queue"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Queue<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'queue'
        >['request']['abi'],
        'queue',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'queue' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'queue', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'queue';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'queue', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'queue',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"veto"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Veto<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof nounsDaoLogicV2Address
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof nounsDaoLogicV2ABI,
          'veto'
        >['request']['abi'],
        'veto',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'veto' }
    : UseContractWriteConfig<typeof nounsDaoLogicV2ABI, 'veto', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'veto';
      } = {} as any
) {
  return useContractWrite<typeof nounsDaoLogicV2ABI, 'veto', TMode>({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'veto',
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_acceptAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2AcceptAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_acceptAdmin'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_acceptAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_acceptAdmin'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_acceptVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2AcceptVetoer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_acceptVetoer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_acceptVetoer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_acceptVetoer'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_burnVetoPower"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2BurnVetoPower(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_burnVetoPower'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_burnVetoPower',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_burnVetoPower'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setDynamicQuorumParams"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetDynamicQuorumParams(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setDynamicQuorumParams'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setDynamicQuorumParams',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setDynamicQuorumParams'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setMaxQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetMaxQuorumVotesBps(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setMaxQuorumVotesBPS'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setMaxQuorumVotesBPS',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setMaxQuorumVotesBPS'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setMinQuorumVotesBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetMinQuorumVotesBps(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setMinQuorumVotesBPS'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setMinQuorumVotesBPS',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setMinQuorumVotesBPS'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setPendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetPendingAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setPendingAdmin'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setPendingAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setPendingAdmin'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setPendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetPendingVetoer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setPendingVetoer'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setPendingVetoer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setPendingVetoer'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setProposalThresholdBPS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetProposalThresholdBps(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setProposalThresholdBPS'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setProposalThresholdBPS',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setProposalThresholdBPS'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setQuorumCoefficient"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetQuorumCoefficient(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setQuorumCoefficient'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setQuorumCoefficient',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setQuorumCoefficient'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setVotingDelay"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetVotingDelay(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setVotingDelay'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setVotingDelay',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setVotingDelay'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_setVotingPeriod"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2SetVotingPeriod(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      '_setVotingPeriod'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_setVotingPeriod',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_setVotingPeriod'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"_withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Withdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: '_withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, '_withdraw'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"cancel"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Cancel(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'cancel'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'cancel',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'cancel'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castRefundableVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2CastRefundableVote(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      'castRefundableVote'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castRefundableVote',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castRefundableVote'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castRefundableVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2CastRefundableVoteWithReason(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      'castRefundableVoteWithReason'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castRefundableVoteWithReason',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castRefundableVoteWithReason'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2CastVote(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castVote'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castVote',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castVote'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castVoteBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2CastVoteBySig(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castVoteBySig'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castVoteBySig',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castVoteBySig'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"castVoteWithReason"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2CastVoteWithReason(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof nounsDaoLogicV2ABI,
      'castVoteWithReason'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'castVoteWithReason',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'castVoteWithReason'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"execute"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Execute(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'execute'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'execute',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'execute'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Initialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'initialize'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"propose"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Propose(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'propose'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'propose',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'propose'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"queue"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Queue(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'queue'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'queue',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'queue'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `functionName` set to `"veto"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function usePrepareNounsDaoLogicV2Veto(
  config: Omit<
    UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'veto'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return usePrepareContractWrite({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    functionName: 'veto',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nounsDaoLogicV2ABI, 'veto'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"MaxQuorumVotesBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MaxQuorumVotesBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'MaxQuorumVotesBPSSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'MaxQuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'MaxQuorumVotesBPSSet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"MinQuorumVotesBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2MinQuorumVotesBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'MinQuorumVotesBPSSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'MinQuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'MinQuorumVotesBPSSet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"NewAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2NewAdminEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewAdmin'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'NewAdmin',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewAdmin'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"NewImplementation"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2NewImplementationEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewImplementation'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'NewImplementation',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewImplementation'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"NewPendingAdmin"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2NewPendingAdminEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewPendingAdmin'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'NewPendingAdmin',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewPendingAdmin'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"NewPendingVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2NewPendingVetoerEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewPendingVetoer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'NewPendingVetoer',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewPendingVetoer'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"NewVetoer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2NewVetoerEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewVetoer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'NewVetoer',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'NewVetoer'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalCanceled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalCanceledEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalCanceled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalCanceled',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalCanceled'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalCreated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalCreated',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalCreated'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalCreatedWithRequirements"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalCreatedWithRequirementsEvent(
  config: Omit<
    UseContractEventConfig<
      typeof nounsDaoLogicV2ABI,
      'ProposalCreatedWithRequirements'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalCreatedWithRequirements',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalCreatedWithRequirements'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalExecuted"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalExecutedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalExecuted'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalExecuted',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalExecuted'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalQueued"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalQueuedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalQueued'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalQueued',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalQueued'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalThresholdBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalThresholdBpsSetEvent(
  config: Omit<
    UseContractEventConfig<
      typeof nounsDaoLogicV2ABI,
      'ProposalThresholdBPSSet'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalThresholdBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalThresholdBPSSet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"ProposalVetoed"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2ProposalVetoedEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalVetoed'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'ProposalVetoed',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'ProposalVetoed'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"QuorumCoefficientSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2QuorumCoefficientSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'QuorumCoefficientSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'QuorumCoefficientSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'QuorumCoefficientSet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"QuorumVotesBPSSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2QuorumVotesBpsSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'QuorumVotesBPSSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'QuorumVotesBPSSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'QuorumVotesBPSSet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"RefundableVote"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2RefundableVoteEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'RefundableVote'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'RefundableVote',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'RefundableVote'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"VoteCast"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2VoteCastEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'VoteCast'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'VoteCast',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'VoteCast'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"VotingDelaySet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2VotingDelaySetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'VotingDelaySet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'VotingDelaySet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'VotingDelaySet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"VotingPeriodSet"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2VotingPeriodSetEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'VotingPeriodSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'VotingPeriodSet',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'VotingPeriodSet'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nounsDaoLogicV2ABI}__ and `eventName` set to `"Withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x51c7d7c47e440d937208bd987140d6db6b1e4051)
 */
export function useNounsDaoLogicV2WithdrawEvent(
  config: Omit<
    UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'Withdraw'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof nounsDaoLogicV2Address } = {} as any
) {
  return useContractEvent({
    abi: nounsDaoLogicV2ABI,
    address: nounsDaoLogicV2Address[1],
    eventName: 'Withdraw',
    ...config,
  } as UseContractEventConfig<typeof nounsDaoLogicV2ABI, 'Withdraw'>);
}
